Scan the whole project and

Outline the pages i would need for the admin on the front end

sample format*
Login 
use () route 

dashboard
display the list of doctors using the () Route Continue like this


**write the response for admin below this line in this same txt file**

## Admin Frontend Pages

1. Login
   - Use `/api/auth/login` route
   - Provides JWT authentication token for subsequent requests

2. Admin Dashboard
   - Main overview page with statistics and quick access to key features
   - No specific API needed, will use data from multiple endpoints

3. User Management
   - List all users using `/users` GET route
   - Create new user using `/users` POST route
   - View user details using `/users/{id}` GET route
   - Update user using `/users/{id}` PUT route
   - Delete user using `/users/{id}` DELETE route

4. Doctor Management
   - List all doctors using `/doctors` GET route
   - Create new doctor using `/doctors` POST route
   - View doctor details using `/doctors/{id}` GET route
   - Update doctor using `/doctors/{id}` PUT route
   - Delete doctor using `/doctors/{id}` DELETE route

5. Patient Management
   - List all patients using `/patients` GET route with pagination, filtering
   - Create new patient using `/patients` POST route
   - View patient details using `/patients/{id}` GET route
   - Update patient using `/patients/{id}` PUT route
   - Delete patient using `/patients/{id}` DELETE route
   - View patient's medical history using `/patients/{id}/medical-history` GET route
   - View patient's admissions using `/patients/{id}/admissions` GET route
   - View patient's insurances using `/patients/{id}/insurances` GET route

6. Admission Management
   - List all admissions using `/admissions` GET route
   - Create new admission using `/admissions` POST route
   - View admission details using `/admissions/{id}` GET route
   - Update admission using `/admissions/{id}` PUT route
   - Delete admission using `/admissions/{id}` DELETE route
   - View admission's vital signs using `/admissions/{id}/vital-signs` GET route

7. Insurance Management
   - List all insurances using `/insurances` GET route
   - Create new insurance using `/insurances` POST route
   - View insurance details using `/insurances/{id}` GET route
   - Update insurance using `/insurances/{id}` PUT route
   - Delete insurance using `/insurances/{id}` DELETE route

8. Medical History Management
   - List all medical histories using `/medical_history` GET route
   - Create new medical history using `/medical_history` POST route
   - View medical history details using `/medical_history/{id}` GET route
   - Update medical history using `/medical_history/{id}` PUT route
   - Delete medical history using `/medical_history/{id}` DELETE route

9. Patient-Insurance Management
   - View patient insurance by ID using `/patient-insurances/{id}` GET route
   - Add insurance to patient using `/patients/{id}/insurances` POST route

10. System Settings
    - Configure system parameters
    - Manage user roles and permissions
    - No specific endpoints, would be custom admin functionality


**write the response for patients below this line in this same txt file**

## Patient Frontend Pages

1. Login
   - Use `/api/auth/login` route
   - Provides JWT authentication token for subsequent requests

2. Patient Dashboard
   - Overview of patient's current health status, upcoming appointments, recent visits
   - No specific API needed, will use data from multiple endpoints

3. My Profile
   - View own patient profile using `/patients/{id}` GET route
   - Update profile information using `/patients/{id}` PUT route

4. Medical History
   - View own medical history using `/patients/{id}/medical-history` GET route
   - View specific medical record details using `/medical_history/{id}` GET route

5. Admissions History
   - View admission history using `/patients/{id}/admissions` GET route
   - View specific admission details using `/admissions/{id}` GET route

6. Vital Signs
   - View vital signs for specific admission using `/admissions/{id}/vital-signs` GET route
   - View specific vital sign details using `/vital-signs/{id}` GET route

7. Insurance Coverage
   - View insurance information using `/patients/{id}/insurances` GET route
   - View specific insurance details using `/patient-insurances/{id}` GET route

8. New Appointment Request
   - Request a new appointment/admission
   - Could use `/admissions` POST route with appropriate data

9. Messages/Notifications
   - Communication with doctors/staff
   - No specific API in current project, would need to be added

**write the response for doctors below this line in this same txt file**

## Doctor Frontend Pages

1. Login
   - Use `/api/auth/login` route
   - Provides JWT authentication token for subsequent requests

2. Doctor Dashboard
   - Overview of current patients, appointments, and schedule
   - No specific API needed, will use data from multiple endpoints

3. My Profile
   - View own doctor profile using `/doctors/{id}` GET route
   - Update profile information using `/doctors/{id}` PUT route

4. Patient List
   - View list of assigned patients using `/patients` GET route with filtering
   - Search for specific patients

5. Patient Details
   - View specific patient details using `/patients/{id}` GET route
   - View patient's medical history using `/patients/{id}/medical-history` GET route
   - View patient's insurance using `/patients/{id}/insurances` GET route

6. Admission Management
   - View list of admissions using `/admissions` GET route
   - Create new admission using `/admissions` POST route
   - View admission details using `/admissions/{id}` GET route
   - Update admission using `/admissions/{id}` PUT route
   - Record vital signs using `/admissions/{id}/vital-signs` POST route

7. Medical Records
   - Create new medical history record using `/medical_history` POST route
   - Update existing records using `/medical_history/{id}` PUT route
   - View specific record using `/medical_history/{id}` GET route

8. Vital Signs Tracking
   - View vital signs for an admission using `/admissions/{id}/vital-signs` GET route
   - Add new vital signs using `/admissions/{admissionId}/vital-signs` POST route

9. Schedule/Calendar
   - View appointments and schedule
   - No specific API in current project, would need to be added

10. Patient Messaging
    - Communication with patients
    - No specific API in current project, would need to be added